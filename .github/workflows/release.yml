name: Build and Release with Auto Tagging

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Step 2: Run the build script including auto tagging
      - name: Run build script
        run: |
          cmd /c run.bat

      # Step 3: Retrieve tag from file
      - name: Retrieve and Create tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $env:tag = Get-ChildItem -Path tag | Select-Object -ExpandProperty Name
          echo "tag=$tag" >> $GITHUB_ENV
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $tag
          git push origin $tag
          echo "Tag $tag created"
          echo "Tag: ${{ env.tag }}"

      # Step 4: Debug builds folder
      - name: Debug builds folder
        run: |
          dir builds

      # Step 5: Upload binaries to GitHub Release
      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: builds/**/* # Ensure this matches the correct directory
          tag_name: ${{ env.tag }}
          name: Easy MinGW Installer v${{ env.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Handle failure and upload logs
      - name: Prepare logs on failure
        if: failure() # Only runs if the workflow fails
        run: |
          $destinationDir = ".\logs"

          if (-not (Test-Path -Path $destinationDir)) {
              New-Item -ItemType Directory -Path $destinationDir
          }

          $logFiles = Get-ChildItem -Path . -Filter "*.log" -File
          foreach ($file in $logFiles) {
              Move-Item -Path $file.FullName -Destination $destinationDir
          }
      - name: Upload failure logs
        if: failure() # Only runs if the workflow fails
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: logs/
